package com.svincent.moksa.prolog.system_prolog;

/*
 * This file was automatically generated by Smalljava.
 * 
 * Smalljava Vnull-null
 * Copyright (C) 1999 Shawn Vincent
 * http://www.svincent.com/moksa/
 * Smalljava is released under the GNU general public license
 * See http://www.gnu.org/copyleft/gpl.html for details.
 * 
 * File generated: Thursday, December 2, 1999 8:07:00 AM EST
 */
public class com.svincent.moksa.prolog.system_prolog.Loader
  extends com.svincent.moksa.PrologLoader
{
  public com.svincent.moksa.prolog.system_prolog.Loader ()
  {
  }
  
  public void load (com.svincent.moksa.PrologEngine engine)
    throws com.svincent.moksa.PrologException
  {
    com.svincent.moksa.PrologFactory factory;
    factory = engine.getFactory();
    engine.assertz((com.svincent.moksa.Rule)new com.svincent.moksa.prolog.system_prolog.set_input_1());
    engine.assertz((com.svincent.moksa.Rule)new com.svincent.moksa.prolog.system_prolog.set_input_1_alt1());
    engine.assertz((com.svincent.moksa.Rule)new com.svincent.moksa.prolog.system_prolog.set_output_1());
    engine.assertz((com.svincent.moksa.Rule)new com.svincent.moksa.prolog.system_prolog.set_output_1_alt1());
    engine.assertz((com.svincent.moksa.Rule)new com.svincent.moksa.prolog.system_prolog.open_3());
    engine.assertz((com.svincent.moksa.Rule)new com.svincent.moksa.prolog.system_prolog.flush_output_0());
    engine.assertz((com.svincent.moksa.Rule)new com.svincent.moksa.prolog.system_prolog.get_char_1());
    engine.assertz((com.svincent.moksa.Rule)new com.svincent.moksa.prolog.system_prolog.put_char_1());
    engine.assertz((com.svincent.moksa.Rule)new com.svincent.moksa.prolog.system_prolog.nl_0());
    engine.assertz((com.svincent.moksa.Rule)new com.svincent.moksa.prolog.system_prolog.write_1());
    engine.assertz((com.svincent.moksa.Rule)new com.svincent.moksa.prolog.system_prolog.append_3());
    engine.assertz((com.svincent.moksa.Rule)new com.svincent.moksa.prolog.system_prolog.append_3_alt1());
    engine.assertz((com.svincent.moksa.Rule)new com.svincent.moksa.prolog.system_prolog.memberOf_2());
    engine.assertz((com.svincent.moksa.Rule)new com.svincent.moksa.prolog.system_prolog.memberOf_2_alt1());
  }
  
}
